name: Build nighlty release
on:
  workflow_dispatch:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron: '0 0 * * *'
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
      - run: npm install
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
      - name: Install action dependencies
        run: npm install
        working-directory: ./.github/actions/github
      - id: nightly
        name: Get latest nightly build tag
        uses: ./.github/actions/github
        with:
          action: get-latest-nightly-build
          options: tag_name
      - id: changed
        name: Check for changes since last nightly
        uses: ./.github/actions/github
        with:
          action: check-for-changes
          options: asset source/
      - name: Build CometVisu
        if: success() && steps.changed.outputs.result == 'true'
        run: grunt release-cv
        env:
          DEPLOY_NIGHTLY: 1
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Nightly-Build-${{ steps.nightly.outputs.result }}
          path: |
            ./CometVisu-*.tar.gz
            ./CometVisu-*.zip
      - name: Upload binaries to Nightly release
        uses: svenstaro/upload-release-action@v2
        if: success() && steps.changed.outputs.result == 'true'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./CometVisu-*.{tar.gz,zip}
          file_glob: true
          tag: ${{ steps.nightly.outputs.result }}
          overwrite: true
      - name: Cleanup old nightly builds
        uses: ./.github/actions/github
        with:
          action: cleanup-assets
          options: 3
